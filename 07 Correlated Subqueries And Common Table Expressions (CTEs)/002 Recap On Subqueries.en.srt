1
00:00:01,150 --> 00:00:06,550
I've covered some queries as part of my previous course, the comprehensive Esquibel course, but I'll

2
00:00:06,550 --> 00:00:08,520
give a quick refresher on some queries.

3
00:00:09,640 --> 00:00:13,360
The focus of this section really is on common table expressions.

4
00:00:14,450 --> 00:00:22,250
A subquery is a query that is nested inside of another query, a sub query can occur anywhere and expression

5
00:00:22,250 --> 00:00:29,180
is allowed, such as the select clause, the front clause, the where clause, the having clause and

6
00:00:29,180 --> 00:00:29,660
so on.

7
00:00:29,990 --> 00:00:32,900
Sub queries must be enclosed in parenthesis.

8
00:00:35,880 --> 00:00:42,870
So normally some queries are executed before the hour to query if you have multiple sub queries nested

9
00:00:42,870 --> 00:00:50,340
inside each other, then the innermost sub query is evaluated first and then the next sub query and

10
00:00:50,340 --> 00:00:52,230
finally the output query.

11
00:00:54,080 --> 00:01:01,490
A scalar sub subquery is one where the sub query returns only one expression, forming one column and

12
00:01:01,490 --> 00:01:02,120
one row.

13
00:01:03,320 --> 00:01:09,620
You can use KAILASAM queries in most places that you can use and also query the below list shows where

14
00:01:09,620 --> 00:01:11,600
you can't use Gayler sub queries.

15
00:01:13,560 --> 00:01:18,960
OK, now let's do some examples first, let's query the AMP table.

16
00:01:27,090 --> 00:01:27,620
OK.

17
00:01:29,590 --> 00:01:37,570
Now I want to return a sub query that will always select employees that are earning above the average

18
00:01:37,570 --> 00:01:38,040
salary.

19
00:01:38,980 --> 00:01:47,170
So to find the average salary, I can type select average salary from.

20
00:01:52,090 --> 00:01:59,860
And this is the average salary, I can then use this as a subquery in the workforce as such.

21
00:02:09,230 --> 00:02:12,470
And then enclose this in parenthesis as a sub query.

22
00:02:14,690 --> 00:02:16,220
So if I format this.

23
00:02:22,420 --> 00:02:22,630
It's.

24
00:02:34,570 --> 00:02:39,310
The innermost subquery will execute first, returning this No.

25
00:02:40,910 --> 00:02:47,450
Then the outer query will execute for when the salary is greater than two thousand and seventy three.

26
00:02:49,060 --> 00:02:54,880
This is also known as a scale sub query as it only returns one value in the sub query.

27
00:02:55,720 --> 00:02:56,830
Now, if I had run.

28
00:02:59,420 --> 00:03:02,930
We return all salaries above the average.

29
00:03:05,530 --> 00:03:17,700
You can also use a sub query in the front rows, so if I type select any cell from select store from

30
00:03:18,340 --> 00:03:22,240
where you name equals King.

31
00:03:24,100 --> 00:03:27,550
I essentially have a sub query after the from clause.

32
00:03:28,640 --> 00:03:33,560
When you have a submarine in the front rows, it's referred to as an inline V.

33
00:03:39,460 --> 00:03:43,930
Now, let's return all the employees where the employees are in Department 10.

34
00:03:46,200 --> 00:03:55,290
I can first find out the employee numbers of all employees in Department Ten by typing select employee

35
00:03:55,950 --> 00:03:59,880
from where Depner equals 10.

36
00:04:04,260 --> 00:04:06,900
I can now use this as a subquery.

37
00:04:08,510 --> 00:04:10,010
And use the inclose.

38
00:04:11,080 --> 00:04:17,140
To select all employees where the employee number is in this list like this.

39
00:04:28,710 --> 00:04:29,490
And Deborah.

40
00:04:33,950 --> 00:04:40,190
And here are results, of course, I didn't really need to use a sub query for this, but it's just

41
00:04:40,190 --> 00:04:42,800
an example to show you how to use it in the inclose.

42
00:04:43,520 --> 00:04:46,580
OK, so that was a refresher on sub queries.
